<?php

global $data;

function ge_role_consolidation_form_alter(&$form, &$form_state, $form_id) {
  $valid_nodes = array(
    'link_to_a_document_node_form' => true,
    'create_links_node_form' => true,
    'add_page_node_form' => true,
    'news_article_node_form' => true,
    'section_node_form' => true,
    'multisite' => true,
  );

  if (isset($valid_nodes[$form_id])) {
    $nid = $form['nid']['#value'];
    $node = $form['#node'];

    $flag = FALSE;
    if (isset($node->translation_source->nid) && ($node->translation_source->nid!=$nid)) {
	$flag=TRUE;
     $source_node = node_load($node->translation_source->nid);
    }
    if ((isset($node->tnid) && ($node->tnid != $nid) && ($node->tnid != 0)) || (arg(1) == "add" && isset($_GET['translation']) && isset($_GET['target']))) {
      $flag = TRUE;
    }
    if ($flag) {
      $form['field_self_service_roles']['#attributes']['class'][] = 'disable-self-service-role';
    }
    	
  if ($flag==FALSE) {	   //use array unshift to place it at the beginning of the validaitons array.
    array_unshift($form['#validate'], '_validate_from_roles');
  }
  }  
}

function _validate_from_roles(&$form, &$form_state) {
    $values = $form_state['values'];
    $lang = LANGUAGE_NONE; //$values['language'];
    $page_roles = $values['field_self_service_roles'][$lang];

    if (!_has_roles($page_roles)) {
        return;
    }
    $fields = array(
        'link_to_a_document_node_form' => 'field_files',
        'create_links_node_form' => 'field_urls',
        'add_page_node_form' => 'field_group',
	'news_article_node_form'=>'field_link_type_new',
        'section_node_form' => true,
        'multisite_node_form' => 'field_link_type_new',
    );

    $section_roles = _get_section_roles($values, $lang, $fields[$form['#form_id']]);
    $added = _compare_roles($page_roles, $section_roles, $form, $form_state);

    if ($added !== false) {
        form_set_error('field_self_service_roles', t('The following items have beed added to the page from the section roles:'));
        $terms = (entity_load('taxonomy_term', $added));
        foreach ($terms as $term) {
            drupal_set_message($term->name, 'error');
        }
        drupal_set_message(t('Please verify that the data is correct and save the node.'), 'error');
        if (function_exists('_add_selectric') ) {
            _add_selectric($form, $form_state, $form_state['build_info']['form_id']);
        }
    }
}

function _compare_roles($page_roles, $section_roles, &$form, &$form_state, $lang = 'und') {
    if (empty($page_roles) || empty($section_roles)) {
        return false;
    }
    $added = array();
    foreach ($page_roles as $key => $tid) {
        if (isset($section_roles[$tid['tid']])) {
            unset($section_roles[$tid['tid']]);
        }
    }
    foreach ($section_roles as $key => $tid) {
        $term = entity_load('taxonomy_term', array($tid));
        if (!isset($term[$tid]->tid)) {
            continue;
        }
        $form_state['values']['field_self_service_roles'][$lang][] = array(
            'tid' => $term[$tid]->tid,
//            'name' => $term[$tid]->name,
//            'vid' => $term[$tid]->vid,
//            'vocabulary_machine_name' => $term[$tid]->vocabulary_machine_name
        );
        if ($form['field_self_service_roles'][$lang]['#type'] == 'select') {
            $form['field_self_service_roles'][$lang]['#value'][$tid] = $tid;
        } else {
            $form['field_self_service_roles'][$lang]['#value'] .= ',' . $term[$tid]->name;
        }
        $added[$tid] = $tid;
    }

//    form_set_value($form['field_self_service_roles'], $form['field_self_service_roles'][$lang]['#value'] + $added, $form_state);
    return count($added) > 0 ? $added : false;
}

function _has_roles($page_roles) {
    return count($page_roles) > 0 && isset($page_roles[0]['tid']) ? true : false;
}

function _get_section_roles($values, $lang = 'und', $field = 0) {
    if (!isset($values[$field])) {
        return false;
    }
    //peer review required here.
    global $data;
    $data = array('lang' => LANGUAGE_NONE, 'roles' => array());
    array_walk_recursive($values[$field][$lang], '_find_self_service_roles');
    return $data['roles'];
}

function _find_self_service_roles($content, $key) {
    global $data;
    if (isset($content->field_self_service_roles[$data['lang']])) {
        $self_service_roles = $content->field_self_service_roles[$data['lang']];
        foreach ($self_service_roles as $key => $tid) {
            $data['roles'][$tid['tid']] = $tid['tid'];
        }
    }
}
