<?php

/*
 * This function checkes the SM Header and allows user to login based on that.

 */

function rso_login_validateExternalUser() {
  $sm_username=_get_username();
  if (isset($sm_username)) {
    $user = user_load_by_name($sm_username);

    if (($user->uid == '' || $user->uid == 0) || (!empty($user->name) && $user->name != $sm_username)) {
      drupal_access_denied();
      drupal_exit();
    }

    // following borrowed from user_authenticate_finalize(), but with slightly different message
    watchdog('user', 'Session opened for %name by RSO Login.', array('%name' => $user->name));

    $form_state = array();
    $form_state['uid'] = $user->uid;
    user_login_submit(array(), $form_state);
  }
}

/*
 * Implementation of hook_boot().
 *
 *  
 */
function rso_login_boot() {
  global $user;
  if (drupal_is_cli())
    return;

  if($user->uid > 0) {
    return;
  }
  else {
    // get user module and include some handy functions
    drupal_bootstrap(DRUPAL_BOOTSTRAP_FULL);
    drupal_load('module', 'user');
    rso_login_validateExternalUser();
  }
}

/*
 * Implementation of hook_user_logout().
 *
 *  
 */
function rso_login_user_logout($account) {
  session_destroy();
  $logout_url = variable_get('rso_logout_url', '');
  $port = ($_SERVER["SERVER_PORT"] == "80") ? "" : (":" . $_SERVER["SERVER_PORT"]);
  //drupal_goto($logout_url."http://$_SERVER[HTTP_HOST]$port$_SERVER[REQUEST_URI]");
  drupal_goto($logout_url . "http://$_SERVER[HTTP_HOST]");
}

/*
 * Implementation of hook_config_form_handler().
 *
 *  
 */
function rso_login_config_form_handler() {
  return drupal_get_form('rso_login_form');
}

/*
 * Implementation of hook_form().
 *
 *  
 */
function rso_login_form($form_state) {
  $form = array();

  $form['rso_logout_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Logout URL'),
    '#default_value' => variable_get('rso_logout_url', ''),
  );

  $form['rso_submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );

  return $form;
}

/*
 * Implementation of hook_form_submit().
 *
 *  
 */
function rso_login_form_submit($form, &$form_state) {
  variable_set('rso_logout_url', $form_state['values']['rso_logout_url']);
}

/*
 * Implementation of hook_menu().
 *
 *  
 */
function rso_login_menu() {
  $items = array();
  $items['admin/config/rsoform'] = array(
    'title' => 'RSO Configurations',
    'description' => 'RSO Configurations',
    'page callback' => 'rso_login_config_form_handler',
    'access arguments' => array('access content'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}


function _get_username() {
  if ($_SERVER['HTTP_SM_USER']||$_SERVER['HTTP_GEORACLEHRID']||$_SERVER['HTTP_SMUSER']) {
      if($_SERVER['HTTP_SM_USER']) {
      $sm_username = $_SERVER['HTTP_SM_USER'];}
      elseif($_SERVER['HTTP_GEORACLEHRID'])
      { $sm_username = $_SERVER['HTTP_GEORACLEHRID'];}
      elseif($_SERVER['HTTP_SMUSER'])
      { $sm_username = $_SERVER['HTTP_SMUSER'];}
  }
  return $sm_username;
}