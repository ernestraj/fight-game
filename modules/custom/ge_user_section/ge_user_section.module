  <?php 
  
  
  /**
 * Implementation of hook_views_api
 */
function ge_user_section_views_api() {
  return array(
    'api' => '2.0',
    'path' => drupal_get_path('module', 'ge_user_section'),
  );
}

/**
 * Same as PHP _array_intersect, but faster.
 * @param array $array1 The array with master values to check.
 * @param array $array2 An array to compare values against.
 * @return array an array containing all of the values in array1 whose values exist in all of the parameters
 * or FALSE if one of the elements is not an array.
 */
function ge_user_section_array_intersect($array1, $array2) {
  if (!is_array($array1) || !is_array($array2)) {
    return FALSE;
  }
  $array_intersect = array();
  foreach ($array2 as $key => $value) {
    if (isset($array1[$key])) {
      $array_intersect[$key] = $array1[$key];
    }
  }
  return $array_intersect;
}

function get_user_sections($values) {
  global $user;
  $account = user_load($values->uid);
  $user_all_ids = workbench_access_get_user_tree($account);
  $user_tids = array_keys($user_all_ids);
  $current_user_ids = workbench_access_get_user_tree($user);
  $current_user_tids = array_keys($current_user_ids);
  $array_intersect = ge_user_section_array_intersect($user_tids, $current_user_tids);
  $output = theme('user_section_handler', array('user_sections' => $array_intersect, 'user_ids' => $user_all_ids));
  return $output;
}

/**
 * overrides hook_theme
 */
function ge_user_section_theme() {
  return array(
    'user_section_handler' => array(
      'variables' => array('user_sections' => NULL, 'user_ids' => NULL),
    ),
  );
}

function theme_user_section_handler($variables) {
  $count = 0;
  if (count($variables['user_sections']) < 1|| count($variables['user_ids']) < 1) {
    return false;
  }
  drupal_add_js(drupal_get_path('module', 'ge_filtering') . '/js/ge_filtering.js');
  $output = '';
  $output .= '<div class = "shown-sections user-sections">';
  foreach ($variables['user_sections'] as $sections) {
    if ($variables['user_ids'][$sections]['depth'] == 1) {
      if ($count == 1) {
        $output .= '</ul>';
      }
      $section_full_name =  isset($variables['user_ids'][$sections]['description']) ? $variables['user_ids'][$sections]['description'] : $variables['user_ids'][$sections]['name'];
      $output .= '<span><a href="javascript:void(0)">' . $section_full_name . '</a></span>';
      $output .= '<ul>';
      $count = 1;
    }
    elseif ($variables['user_ids'][$sections]['depth'] == 2 && $count == 0 && $counter == 0) {
      $parentterm = taxonomy_term_load($variables['user_ids'][$sections]['parent']);
      $pattern_full_name = !empty($parentterm->description) ? $parentterm->description : $parentterm->name;
      $output .= '<span><a href="javascript:void(0)">' . $pattern_full_name . '</a></span>';
      $output .= '<ul>';
      $output .= '<li>' . $variables['user_ids'][$sections]['name'] . '</li>';
      $counter = $count = 1;
    }
    else {
      $output .= '<li>' . $variables['user_ids'][$sections]['name'] . '</li>';
    }
  }
  $output .= '</ul>';
  $output .= '</div>';
  return $output;
}