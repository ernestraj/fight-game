<?php
/**
 * Implements hook_permission().
 */
function ge_state_access_permission() {
  $states = workbench_moderation_states();
  $perms = array();
  foreach($states as $machine_name => $state){
    $perms["edit revisions in " . $machine_name . " state"] = array('title' => t('Can <em>edit</em> revisions in <em>' . $state->label . '</em> state'));
  }

  $perms["edit revisions in any state"] = array('title' => t('Can <em>edit</em> revisions in <em> Any </em> state'));

  foreach($states as $machine_name => $state){
    $perms["block view revisions in " . $machine_name . " state"] = array('title' => t('Block <em>view</em> revisions in <em>' . $state->label . '</em> state'));
  }

  $perms["view revisions in any state"] = array('title' => t('Can <em>view</em> revisions in <em> Any </em> state'));
  return $perms;
}


/**
 * Implements hook_menu_alter().
 */
function ge_state_access_menu_alter(&$items) {
  $items['node/%node/edit']['access callback'] = '_ge_state_access_node_edit';
  $items['node/%node/edit']['access arguments'] = array(1);

  $items['node/%node/draft']['access callback'] = '_ge_state_access_node_draft_view';
  $items['node/%node/draft']['access arguments'] = array(1);
  
  $items['node/%node']['access callback'] = '_ge_state_access_node_view';
  $items['node/%node']['access arguments'] = array(1);
}
function _ge_state_access_node_view($node){
  global $user;
  $account = $user;
  $nodes_restricted=variable_get('nodes_to_restrict');
  $users_allowed=variable_get('users_to_allow_access');
	
  if(in_array($node->nid,$nodes_restricted)&&!in_array($user->name,$users_allowed)){
    drupal_set_message(t('This node is restricted for viewing'));
    return false;
  }
  elseif($node->workbench_moderation['current']->state == 'archive' && !in_array('super_user', $user->roles)) {
    drupal_set_message('This node is archived. Please contact Super user for getting it out of archive mode.', 'error');
    return false;
  }

  return node_access('view',$node, $account);
}   

	
function _ge_state_access_node_edit($node){
  global $user;
  $account = $user;
  $nodes_restricted=variable_get('nodes_to_restrict');
  $users_allowed=variable_get('users_to_allow_access');
  if($account->uid == 0){
    return false;
  }

  if(isset($node->workbench_moderation['current'])){
    global $user;
    if($node->workbench_moderation['current']->state == 'archive' && !in_array('super_user', $user->roles)) {
      drupal_goto('node/' . $node->nid);
      return false;
    }
    else if (!in_array('editor', $user->roles) && (in_array('reviewer', $user->roles) || in_array('publisher', $user->roles))) {
      drupal_set_message(t('This content have a revision under ' . workbench_moderation_state_label($node->workbench_moderation['current']->state) .' state. you can\'t edit revision in this state. Thank you.'), 'warning', false);
      return false;
    }
    else {
      if ((isset($node->workbench_moderation['published']) && $node->workbench_moderation['current']->vid != $node->workbench_moderation['published']->vid) 
	|| ($node->workbench_moderation['current']->current && !$node->workbench_moderation['current']->published)) {
        $can_edit = user_access("edit revisions in ". $node->workbench_moderation['current']->state ." state",$account);

        $can_edit_all = user_access("edit revisions in any state",$account);
        if(!$can_edit && !$can_edit_all){
          if(arg(2) == "edit"){
            drupal_goto('node/'.$node->nid);
          }else{
            drupal_set_message(t('This content have a revision under ' . workbench_moderation_state_label($node->workbench_moderation['current']->state) .' state. you can\'t edit revision in this state. Thank you.'), 'warning', false);
          }
          return false;
        }
      }
      if (isset($_SESSION['country']) && $node->field_country['und'][0]['tid'] != $_SESSION['country']) {
        if (arg(2) == "edit"){
          drupal_goto('node/'.$node->nid);
        }
        else {
          $select_country = taxonomy_term_load($_SESSION['country']);
          $node_country = taxonomy_term_load($node->field_country['und'][0]['tid']);
          if(!empty($node_country->field_country_name['und'][0]['value']))
            $name = $node_country->field_country_name['und'][0]['value'];
          else
            $name = $node_country->name;

          if(!empty($select_country->field_country_name['und'][0]['value']))
            $select_name = $select_country->field_country_name['und'][0]['value'];
          else
            $select_name = $select_country->name;
          drupal_set_message(t('This content belongs to ' . $name . '. Please update default portal from ' . $select_name . ' to ' . $name . ' to make edits.'), 'warning', false);
        }
        return false;
      }  
      elseif (!isset($_SESSION['country'])) {
        drupal_set_message(t('Please select portal from dashboard'));
        return false;
      }
    }
  }
  if(in_array($node->nid,$nodes_restricted)&&!in_array($user->name,$users_allowed)){
      drupal_set_message(t('This node is restricted for viewing'));
	  return false;}
  return node_access('update',$node, $account);
}

function _ge_state_access_node_draft_view($node){
  global $user;
  $account = $user;
 $nodes_restricted=variable_get('nodes_to_restrict');
  $users_allowed=variable_get('users_to_allow_access');
  if($account->uid == 0){
    return false;
  }

  if(isset($node->workbench_moderation['current']) && isset($node->workbench_moderation['published'])){
    if($node->workbench_moderation['current']->vid != $node->workbench_moderation['published']->vid ){

      $block_view = user_access("block view revisions in ". $node->workbench_moderation['current']->state ." state",$account);

      $can_edit = user_access("edit revisions in ". $node->workbench_moderation['current']->state ." state",$account);

      $can_view_all = user_access("view revisions in any state",$account);

      if($block_view && !$can_edit && !$can_view_all){
        if(arg(2) == "draft"){
            drupal_goto('node/'.$node->nid);
        }else{
          drupal_set_message(t('This content have a revision under '.workbench_moderation_state_label($node->workbench_moderation['current']->state) .' state. you can\'t view revision in this state. Thank you.'), 'warning', false);
        }
        return false;
      }
    }else{
      return false;
    }
  }
  if(in_array($node->nid,$nodes_restricted)&&!in_array($user->name,$users_allowed)){
      drupal_set_message(t('This node is restricted for viewing'));
	  return false;}
  return node_access('view',$node, $account);
}